package 백준;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class 큐 {

	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		StringBuilder sb = new StringBuilder();
		int n = Integer.parseInt(br.readLine());
		Queue<Integer> queue = new LinkedList<Integer>();
		for(int i = 0;i<n;i++) {
			st = new StringTokenizer(br.readLine());
			String s = st.nextToken();
			
			if(s.equals("push")){
				int num = Integer.parseInt(st.nextToken());
				queue.add(num);
			}
			if(s.equals("pop")) {
				if(queue.isEmpty())sb.append("-1\n");
				else sb.append(queue.peek()+"\n");
				queue.poll();
			}
			if(s.equals("size")) {
				sb.append(queue.size()+"\n");
	
			}
			if(s.equals("empty")) {
				if(queue.isEmpty())sb.append(1+"\n");
				else sb.append(0+"\n");
			}
			if(s.equals("front")) {
				if(queue.isEmpty())sb.append("-1\n");
				else sb.append(queue.peek()+"\n");
			}
			if(s.equals("back")) {
				if(queue.isEmpty())sb.append("-1\n");
				else {
					int size = queue.size();
					for(int j = 0;j<size-1;j++) {
						int x = queue.poll();
						queue.add(x);
					}
					sb.append(queue.peek()+"\n");
					int x = queue.poll();
					queue.add(x);
				}
			}
		}
		System.out.println(sb.toString());
	}

}
