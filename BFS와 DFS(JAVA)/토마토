import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class 토마토 {

   public static void main(String[] args) throws IOException {
	      // TODO Auto-generated method stub
	   	
	      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	      StringTokenizer st;
	      StringBuilder sb = new StringBuilder();
	      st = new StringTokenizer(br.readLine());
	      int m = Integer.parseInt(st.nextToken());
	      int n = Integer.parseInt(st.nextToken());
	      int [][] array = new int[n][m];

	      int[]dx = {1, -1, 0, 0};
	      int[]dy = {0, 0, -1, 1};

	      int ans = 0;
	      Queue<Integer[]>queue = new LinkedList<Integer[]>();
	      for(int i = 0;i<n;i++) {
	    	  st = new StringTokenizer(br.readLine());
	    	  for(int j =0;j<m;j++) {
	    		  int x = Integer.parseInt(st.nextToken());
	    		  array[i][j] = x;
	    		  if(x==1) {
	    			  queue.offer(new Integer[]{i,j});
	    			  
	    		  }
	    		  if(x==0)ans++;
	    	  }

	    	  
	      }
	      
	      
	      while(!queue.isEmpty()) {
	    	  Integer[] p = queue.poll();
	    	  int x = p[0];
	    	  int y = p[1];
	    	  for(int i = 0;i<4;i++) {
	    		  int new_x = x+dx[i];
	    		  int new_y = y+dy[i];
	    		 
	    		  if(new_x<0||new_y<0||new_x>=n||new_y>=m)continue;
	    		  
	    		  if(array[new_x][new_y]!=0 ) continue;
	    		  array[new_x][new_y]=array[x][y]+1;
	    		  queue.offer(new Integer[] {new_x,new_y});
	    		  
	    			  
	    	  }
	      }
	      int result = 0;
	      boolean bo = true;
	      for(int i = 0;i<n;i++) {
	    	  for(int j = 0;j<m;j++) {
	    		  if(array[i][j]==0) bo = false;
	    		  result = Math.max(array[i][j],result);
	    	  }
	      }
	      if(bo) sb.append(result-1);
	      else sb.append(-1);
	      System.out.println(sb.toString());
	      
	}

}
