import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class 유기농배추 {
		static boolean visited[][];
		static int[][]array ;
		static int dx[] = {1, -1, 0, 0};
		static int dy[] = {0, 0, 1, -1};
		static int m;
		static int n;

	   public static void main(String[] args) throws IOException {
		      // TODO Auto-generated method stub

		      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		      StringTokenizer st;
		     StringBuilder sb = new StringBuilder();
		      int t = Integer.parseInt(br.readLine());
		      for(int z = 0;z<t;z++) {
		      st = new StringTokenizer(br.readLine());
		      m = Integer.parseInt(st.nextToken());
		      n = Integer.parseInt(st.nextToken());
		      int k = Integer.parseInt(st.nextToken());
		      array = new int[m][n];
		      visited = new boolean[m][n];
		      
		
		      for(int i = 0;i<k;i++) {
		    	  st = new StringTokenizer(br.readLine());
		    	  int x = Integer.parseInt(st.nextToken());
		    	  int y = Integer.parseInt(st.nextToken());
		    	  array[x][y] = 1;
		      }

	
		      int cnt =0;
		      for(int i = 0;i<m;i++) {
		    	  for(int j =0;j<n;j++) {
		    		 if(array[i][j]==1 && !visited[i][j]) {
		    		  dfs(i,j);
		    		  cnt++;
		    		 }
		    		  }
		    	  }
		      
		     
			     sb.append(cnt+"\n");
		      }
		      System.out.println(sb.toString());
	}

	   static void dfs(int x, int y) {
		   visited[x][y] = true;
		   for(int i = 0;i<4;i++) {
			   int new_x = x+dx[i];
			   int new_y = y+dy[i];
			   if(new_x<0 || new_y<0 || new_x>=m ||new_y>=n)continue;
			   if(!visited[new_x][new_y]&&array[new_x][new_y]==1) {
				   dfs(new_x,new_y);
	
			   }
			   
 		   }

	   }
}
